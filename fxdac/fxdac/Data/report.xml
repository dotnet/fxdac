<report>
  <REMOVED>
    <item text="Removed type Runtime"/>
    <item text="Removed base System.Runtime.InteropServices._Activator from type Activator"/>
    <item text="Removed method Activator.System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid, System.IntPtr, uint, uint, System.IntPtr):void"/>
    <item text="Removed method Activator.System.Runtime.InteropServices._Activator.GetTypeInfo(uint, uint, System.IntPtr):void"/>
    <item text="Removed method Activator.System.Runtime.InteropServices._Activator.GetTypeInfoCount(uint):void"/>
    <item text="Removed method Activator.System.Runtime.InteropServices._Activator.Invoke(uint, System.Guid, uint, short, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr):void"/>
    <item text="Removed member Activator.CreateInstance(System.AppDomain, string, string):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstance(System.AppDomain, string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[]):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstance(System.AppDomain, string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[], System.Security.Policy.Evidence):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstanceFrom(System.AppDomain, string, string):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstanceFrom(System.AppDomain, string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[]):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstanceFrom(System.AppDomain, string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[], System.Security.Policy.Evidence):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateComInstanceFrom(string, string):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateComInstanceFrom(string, string, byte[], System.Configuration.Assemblies.AssemblyHashAlgorithm):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstance(System.ActivationContext):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstance(System.ActivationContext, string[]):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstance(string, string):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstance(string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[]):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstance(string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[], System.Security.Policy.Evidence):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstance(string, string, object[]):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstanceFrom(string, string):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstanceFrom(string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[]):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstanceFrom(string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[], System.Security.Policy.Evidence):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed member Activator.CreateInstanceFrom(string, string, object[]):System.Runtime.Remoting.ObjectHandle"/>
    <item text="Removed base System.Runtime.InteropServices._Type from type Type"/>
    <item text="Removed method Type.System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid, System.IntPtr, uint, uint, System.IntPtr):void"/>
    <item text="Removed method Type.System.Runtime.InteropServices._Type.GetTypeInfo(uint, uint, System.IntPtr):void"/>
    <item text="Removed method Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(uint):void"/>
    <item text="Removed method Type.System.Runtime.InteropServices._Type.Invoke(uint, System.Guid, uint, short, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr):void"/>
    <item text="Removed base System.MarshalByRefObject from type IsolatedStorage"/>
    <item text="Removed member Assembly.Load(byte[], byte[], System.Security.SecurityContextSource):System.Reflection.Assembly"/>
    <item text="Removed base System.MarshalByRefObject from type AssemblyNameProxy"/>
    <item text="Removed base System.Runtime.InteropServices._MemberInfo from type MemberInfo"/>
    <item text="Removed method MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid, System.IntPtr, uint, uint, System.IntPtr):void"/>
    <item text="Removed method MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType():System.Type"/>
    <item text="Removed method MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(uint, uint, System.IntPtr):void"/>
    <item text="Removed method MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(uint):void"/>
    <item text="Removed method MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(uint, System.Guid, uint, short, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr):void"/>
    <item text="Removed base System.Runtime.InteropServices._MethodBase from type MethodBase"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic:bool"/>
    <item text="Removed property MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual:bool"/>
    <item text="Removed method MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid, System.IntPtr, uint, uint, System.IntPtr):void"/>
    <item text="Removed method MethodBase.System.Runtime.InteropServices._MethodBase.GetType():System.Type"/>
    <item text="Removed method MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(uint, uint, System.IntPtr):void"/>
    <item text="Removed method MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(uint):void"/>
    <item text="Removed method MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(uint, System.Guid, uint, short, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr):void"/>
    <item text="Removed member Module.GetSignerCertificate():System.Security.Cryptography.X509Certificates.X509Certificate"/>
    <item text="Removed member RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(System.Runtime.CompilerServices.RuntimeHelpers.TryCode, System.Runtime.CompilerServices.RuntimeHelpers.CleanupCode, object):void"/>
    <item text="Removed member RuntimeHelpers.PrepareConstrainedRegions():void"/>
    <item text="Removed member RuntimeHelpers.PrepareConstrainedRegionsNoOP():void"/>
    <item text="Removed member RuntimeHelpers.PrepareContractedDelegate(System.Delegate):void"/>
    <item text="Removed member RuntimeHelpers.PrepareDelegate(System.Delegate):void"/>
    <item text="Removed member RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle):void"/>
    <item text="Removed member RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle, System.RuntimeTypeHandle[]):void"/>
    <item text="Removed member RuntimeHelpers.ProbeForSufficientStack():void"/>
    <item text="Removed type _Activator"/>
    <item text="Removed type _Assembly"/>
    <item text="Removed type _AssemblyName"/>
    <item text="Removed type _Attribute"/>
    <item text="Removed type _ConstructorInfo"/>
    <item text="Removed type _EventInfo"/>
    <item text="Removed type _Exception"/>
    <item text="Removed type _FieldInfo"/>
    <item text="Removed type _MemberInfo"/>
    <item text="Removed type _MethodBase"/>
    <item text="Removed type _MethodInfo"/>
    <item text="Removed type _MethodRental"/>
    <item text="Removed type _Module"/>
    <item text="Removed type _ParameterInfo"/>
    <item text="Removed type _PropertyInfo"/>
    <item text="Removed type _SignatureHelper"/>
    <item text="Removed type _Thread"/>
    <item text="Removed type _Type"/>
    <item text="Removed member SecurityException.ctor(string, object, object, System.Reflection.MethodInfo, object, System.Security.IPermission)"/>
    <item text="Removed member SecurityException.FirstPermissionThatFailed:System.Security.IPermission"/>
    <item text="Removed member SecurityException.Action:System.Security.Permissions.SecurityAction"/>
    <item text="Removed member SecurityException.Zone:System.Security.SecurityZone"/>
    <item text="Removed base System.Runtime.InteropServices._Exception from type PolicyException"/>
    <item text="Removed member EventWaitHandle.ctor(bool, System.Threading.EventResetMode, string, bool, System.Security.AccessControl.EventWaitHandleSecurity)"/>
    <item text="Removed member EventWaitHandle.OpenExisting(string, System.Security.AccessControl.EventWaitHandleRights):System.Threading.EventWaitHandle"/>
    <item text="Removed member EventWaitHandle.TryOpenExisting(string, System.Security.AccessControl.EventWaitHandleRights, System.Threading.EventWaitHandle):bool"/>
    <item text="Removed member Mutex.ctor(bool, string, bool, System.Security.AccessControl.MutexSecurity)"/>
    <item text="Removed member Mutex.OpenExisting(string, System.Security.AccessControl.MutexRights):System.Threading.Mutex"/>
    <item text="Removed member Mutex.TryOpenExisting(string, System.Security.AccessControl.MutexRights, System.Threading.Mutex):bool"/>
    <item text="Removed base System.MarshalByRefObject from type RegisteredWaitHandle"/>
    <item text="Removed member Thread.GetDomain():System.AppDomain"/>
    <item text="Removed member Thread.CurrentContext:System.Runtime.Remoting.Contexts.Context"/>
    <item text="Removed base System.MarshalByRefObject from type Timer"/>
    <item text="Removed base System.MarshalByRefObject from type WaitHandle"/>
    <item text="Removed base System.ComponentModel.Component from type BackgroundWorker"/>
    <item text="Removed base System.MarshalByRefObject from type Component"/>
    <item text="Removed member Debug.Listeners:System.Diagnostics.TraceListenerCollection"/>
    <item text="Removed base System.MarshalByRefObject from type TraceListener"/>
    <item text="Removed base System.MarshalByRefObject from type WebRequest"/>
    <item text="Removed base System.MarshalByRefObject from type WebResponse"/>
    <item text="Removed member Semaphore.ctor(int, int, string, bool, System.Security.AccessControl.SemaphoreSecurity)"/>
    <item text="Removed member Semaphore.GetAccessControl():System.Security.AccessControl.SemaphoreSecurity"/>
    <item text="Removed member Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity):void"/>
    <item text="Removed member Semaphore.OpenExisting(string, System.Security.AccessControl.SemaphoreRights):System.Threading.Semaphore"/>
    <item text="Removed member Semaphore.TryOpenExisting(string, System.Security.AccessControl.SemaphoreRights, System.Threading.Semaphore):bool"/>
  </REMOVED>
  <MOVED_TYPES total="209" description="corefx types that changed their location">
  <MOVED_VALID total="41" description="moves that have been deemed ok (list hardcoded)"/>
  <MOVED_TO_SYSTEM_RUNTIME total="168" description="all moves to System.Runtime are OK"/>
  </MOVED_TYPES>
  <TYPES_NOT_IN_ANY_ASSEMBLY total="1" description="types that are not in specification files">
    <item text="System.ArgIterator"/>
  </TYPES_NOT_IN_ANY_ASSEMBLY>
</report>
