<report>
  <REMOVED>
    <item text="Removed base System.Runtime.InteropServices._Activator from type Activator"/>
    <item text="Removed method Activator.GetIDsOfNames(System.Guid, System.IntPtr, uint, uint, System.IntPtr)"/>
    <item text="Removed method Activator.GetTypeInfo(uint, uint, System.IntPtr)"/>
    <item text="Removed method Activator.GetTypeInfoCount(uint)"/>
    <item text="Removed method Activator.Invoke(uint, System.Guid, uint, short, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)"/>
    <item text="Removed member Activator.CreateInstance(System.AppDomain, string, string)"/>
    <item text="Removed member Activator.CreateInstance(System.AppDomain, string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[])"/>
    <item text="Removed member Activator.CreateInstance(System.AppDomain, string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[], System.Security.Policy.Evidence)"/>
    <item text="Removed member Activator.CreateInstanceFrom(System.AppDomain, string, string)"/>
    <item text="Removed member Activator.CreateInstanceFrom(System.AppDomain, string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[])"/>
    <item text="Removed member Activator.CreateInstanceFrom(System.AppDomain, string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[], System.Security.Policy.Evidence)"/>
    <item text="Removed member Activator.CreateComInstanceFrom(string, string)"/>
    <item text="Removed member Activator.CreateComInstanceFrom(string, string, byte[], System.Configuration.Assemblies.AssemblyHashAlgorithm)"/>
    <item text="Removed member Activator.CreateInstance(System.ActivationContext)"/>
    <item text="Removed member Activator.CreateInstance(System.ActivationContext, string[])"/>
    <item text="Removed member Activator.CreateInstance(string, string)"/>
    <item text="Removed member Activator.CreateInstance(string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[])"/>
    <item text="Removed member Activator.CreateInstance(string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[], System.Security.Policy.Evidence)"/>
    <item text="Removed member Activator.CreateInstance(string, string, object[])"/>
    <item text="Removed member Activator.CreateInstanceFrom(string, string)"/>
    <item text="Removed member Activator.CreateInstanceFrom(string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[])"/>
    <item text="Removed member Activator.CreateInstanceFrom(string, string, bool, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo, object[], System.Security.Policy.Evidence)"/>
    <item text="Removed member Activator.CreateInstanceFrom(string, string, object[])"/>
    <item text="Removed base System.Runtime.InteropServices._Type from type Type"/>
    <item text="Removed method Type.GetIDsOfNames(System.Guid, System.IntPtr, uint, uint, System.IntPtr)"/>
    <item text="Removed method Type.GetTypeInfo(uint, uint, System.IntPtr)"/>
    <item text="Removed method Type.GetTypeInfoCount(uint)"/>
    <item text="Removed method Type.Invoke(uint, System.Guid, uint, short, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)"/>
    <item text="Removed base System.MarshalByRefObject from type IsolatedStorage"/>
    <item text="Removed member Assembly.Load(byte[], byte[], System.Security.SecurityContextSource)"/>
    <item text="Removed base System.MarshalByRefObject from type AssemblyNameProxy"/>
    <item text="Removed base System.Runtime.InteropServices._MemberInfo from type MemberInfo"/>
    <item text="Removed method MemberInfo.GetIDsOfNames(System.Guid, System.IntPtr, uint, uint, System.IntPtr)"/>
    <item text="Removed method MemberInfo.GetType()"/>
    <item text="Removed method MemberInfo.GetTypeInfo(uint, uint, System.IntPtr)"/>
    <item text="Removed method MemberInfo.GetTypeInfoCount(uint)"/>
    <item text="Removed method MemberInfo.Invoke(uint, System.Guid, uint, short, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)"/>
    <item text="Removed base System.Runtime.InteropServices._MethodBase from type MethodBase"/>
    <item text="Removed property MethodBase.IsAbstract"/>
    <item text="Removed property MethodBase.IsAssembly"/>
    <item text="Removed property MethodBase.IsConstructor"/>
    <item text="Removed property MethodBase.IsFamily"/>
    <item text="Removed property MethodBase.IsFamilyAndAssembly"/>
    <item text="Removed property MethodBase.IsFamilyOrAssembly"/>
    <item text="Removed property MethodBase.IsFinal"/>
    <item text="Removed property MethodBase.IsHideBySig"/>
    <item text="Removed property MethodBase.IsPrivate"/>
    <item text="Removed property MethodBase.IsPublic"/>
    <item text="Removed property MethodBase.IsSpecialName"/>
    <item text="Removed property MethodBase.IsStatic"/>
    <item text="Removed property MethodBase.IsVirtual"/>
    <item text="Removed method MethodBase.GetIDsOfNames(System.Guid, System.IntPtr, uint, uint, System.IntPtr)"/>
    <item text="Removed method MethodBase.GetType()"/>
    <item text="Removed method MethodBase.GetTypeInfo(uint, uint, System.IntPtr)"/>
    <item text="Removed method MethodBase.GetTypeInfoCount(uint)"/>
    <item text="Removed method MethodBase.Invoke(uint, System.Guid, uint, short, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)"/>
    <item text="Removed member Module.GetSignerCertificate()"/>
    <item text="Removed member SecurityException.ctor(string, object, object, System.Reflection.MethodInfo, object, System.Security.IPermission)"/>
    <item text="Removed member SecurityException.FirstPermissionThatFailed"/>
    <item text="Removed member SecurityException.Action"/>
    <item text="Removed member SecurityException.Zone"/>
    <item text="Removed base System.Runtime.InteropServices._Exception from type PolicyException"/>
    <item text="Removed base System.MarshalByRefObject from type RegisteredWaitHandle"/>
    <item text="Removed member Thread.GetDomain()"/>
    <item text="Removed member Thread.CurrentContext"/>
    <item text="Removed base System.MarshalByRefObject from type Timer"/>
    <item text="Removed base System.MarshalByRefObject from type WaitHandle"/>
    <item text="Removed base System.ComponentModel.Component from type BackgroundWorker"/>
    <item text="Removed base System.MarshalByRefObject from type Component"/>
    <item text="Removed member Debug.Listeners"/>
    <item text="Removed base System.MarshalByRefObject from type TraceListener"/>
    <item text="Removed base System.MarshalByRefObject from type WebRequest"/>
    <item text="Removed base System.MarshalByRefObject from type WebResponse"/>
  </REMOVED>
  <MOVED_TYPES total="206" description="corefx types that changed their location">
    <MOVED_NEEDS_REVIEW>
      <item text="System.IO.FileSystem,System.IO.FileSystemAclExtensions moved from System.IO.FileSystem.AccessControl"/>
      <item text="System.Reflection.TypeExtensions,System.Reflection.Metadata.AssemblyExtensions moved from System.Runtime.Loader"/>
      <item text="System.Runtime.Loader,System.Reflection.AssemblyExtensions moved from System.Reflection.TypeExtensions"/>
      <item text="System.Threading.Security,System.Threading.AbandonedMutexException moved from System.Threading"/>
      <item text="System.Threading.Security,System.Threading.AutoResetEvent moved from System.Threading"/>
      <item text="System.Threading.Security,System.Threading.EventWaitHandle moved from System.Threading"/>
      <item text="System.Threading.Security,System.Threading.ManualResetEvent moved from System.Threading"/>
      <item text="System.Threading.Security,System.Threading.Mutex moved from System.Threading"/>
      <item text="System.Threading.Security,System.Threading.Semaphore moved from System.Threading"/>
      <item text="System.Threading.Security,System.Threading.ThreadingAclExtensions moved from System.Threading.AccessControl"/>
    </MOVED_NEEDS_REVIEW>
  </MOVED_TYPES>
  <TYPES_NOT_IN_ANY_ASSEMBLY total="23" description="types that are not in specification files">
    <item text="Mono.Runtime"/>
    <item text="System.ArgIterator"/>
    <item text="System.Runtime.InteropServices._Assembly"/>
    <item text="System.Runtime.InteropServices._AssemblyName"/>
    <item text="System.Runtime.InteropServices._ConstructorInfo"/>
    <item text="System.Runtime.InteropServices._EventInfo"/>
    <item text="System.Runtime.InteropServices._Exception"/>
    <item text="System.Runtime.InteropServices._FieldInfo"/>
    <item text="System.Runtime.InteropServices._MemberInfo"/>
    <item text="System.Runtime.InteropServices._MethodBase"/>
    <item text="System.Runtime.InteropServices._MethodInfo"/>
    <item text="System.Runtime.InteropServices._Module"/>
    <item text="System.Runtime.InteropServices._ParameterInfo"/>
    <item text="System.Runtime.InteropServices._PropertyInfo"/>
    <item text="System.Runtime.InteropServices._Thread"/>
    <item text="System.Runtime.InteropServices._Type"/>
    <item text="System.Runtime.InteropServices.ComAwareEventInfo"/>
    <item text="System.Security.Cryptography.ECCurve"/>
    <item text="System.Security.Cryptography.ECDsa"/>
    <item text="System.Security.Cryptography.ECParameters"/>
    <item text="System.Security.Cryptography.ECPoint"/>
    <item text="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions"/>
    <item text="System.Security.Cryptography.X509Certificates.RSACertificateExtensions"/>
  </TYPES_NOT_IN_ANY_ASSEMBLY>
</report>
